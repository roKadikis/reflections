Q: When would you want to use a remote repository rather than keeping all your work local?
A: When I want to share the work with other, or when I want to collaborate with peoples with other machines. And when I want to backup my work.

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A: Manually would be easier to collaborate on the same project.

Q: Describe the difference between forks, clones, and branches. When would you use one instead of another?
A: Forks work on GitHub repositories, creating a new one, with a new owner and optionally collabolators. Clones are pies of your own code - thay might be ocal as well as a copy from github. Branches are different versions of your code that are still saved in a same repository. I would use forks to take someone elses repositor as a fundation from which I would build something else that the original author is planning. I would use clones to copy some existing repositories to my computer or make some backups. I would use branches to make some experimental features in the code, while maintaining a working version.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?
A: Easier merging because of less new changes introduced between the current local version and the remote.

Q: How would you collaborate without using Git ir GitHub? What would be easier, and what would be harder?
A: Maybe a Dropbox or something liek that. Most thing sseems to be harder without Git - the merging, the commits, the log will be missed.

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A: I'd use separate branch when I'm working on a new feature while I want the originaal code to be intact and working meanwhile. the branching is more complicated than working on a master, but it allows more control of parallel versions. Branches are helpful when working in teams, where different people are working on different features.


